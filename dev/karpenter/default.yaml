apiVersion: karpenter.k8s.aws/v1
kind: EC2NodeClass
metadata:
  name: default

spec:
  amiSelectorTerms:
    - alias: bottlerocket@latest
  role: karpenter-<your-cluster-name>-node
  subnetSelectorTerms:
    - tags:
        karpenter.sh/discovery: <your-cluster-name>
  securityGroupSelectorTerms:
    - tags:
        karpenter.sh/discovery: <your-cluster-name>
  tags:
    karpenter.sh/discovery: <your-cluster-name>

  kubelet:
    maxPods: 110
    kubeReserved:
      memory: 255Mi # Be conservative here considering DaemonSet resources (default = 255Mi + 11Mi * maxPods)

  metadataOptions:
    httpProtocolIPv6: enabled
    httpPutResponseHopLimit: 2 # required for ebs-csi-driver

---
apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
  name: default
spec:
  template:
    spec:
      nodeClassRef:
        group: karpenter.k8s.aws
        kind: EC2NodeClass
        name: default
      requirements:
        - key: "karpenter.k8s.aws/instance-category"
          operator: In
          values: ["c", "m", "r"]
          # If you want to allow burstable instances:
          # values: ["c", "m", "r", "t"]
        - key: "karpenter.k8s.aws/instance-cpu"
          operator: In
          values: ["1", "2", "4", "8", "16"]
        - key: "karpenter.k8s.aws/instance-hypervisor"
          operator: In
          values: ["nitro"]
        - key: "karpenter.k8s.aws/instance-generation"
          operator: Gt
          values: ["2"]
        # If you prefer only spot instances:
        # - key: "karpenter.sh/capacity-type"
        #   operator: In
        #   values: ["spot"]
  limits:
    cpu: 1000
  disruption:
    consolidationPolicy: WhenEmptyOrUnderutilized
    consolidateAfter: 0s
